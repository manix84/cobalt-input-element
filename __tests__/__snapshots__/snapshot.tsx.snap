// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders basic Input components unchanged 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-74661f0c-0 bDfjcy"
      >
        <div
          class="sc-74661f0c-1 eUeMxO"
          data-cursor-type="phase"
          data-has-errors="false"
          data-testid=""
          tabindex="0"
        >
          <div
            class="sc-74661f0c-2 jpIcsi"
          >
            <span
              class="sc-74661f0c-4 erhQzS"
              data-character-id="0"
              data-cursor="true"
            >
              ​
            </span>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-74661f0c-0 bDfjcy"
    >
      <div
        class="sc-74661f0c-1 eUeMxO"
        data-cursor-type="phase"
        data-has-errors="false"
        data-testid=""
        tabindex="0"
      >
        <div
          class="sc-74661f0c-2 jpIcsi"
        >
          <span
            class="sc-74661f0c-4 erhQzS"
            data-character-id="0"
            data-cursor="true"
          >
            ​
          </span>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders homepage unchanged 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-69456e6e-1 ixuwIj"
      >
        <div
          class="sc-69456e6e-2 ebEoZg"
        >
          <div
            class="sc-69456e6e-3 kPRhRV"
            role="heading"
          >
            Cobalt Input Element
          </div>
          <div
            class="sc-69456e6e-0 iMMezv"
          >
            <div
              class="sc-74661f0c-0 bDfjcy"
            >
              <div
                class="sc-74661f0c-1 eUeMxO sc-69456e6e-6 dwvZJd"
                data-cursor-type="phase"
                data-has-errors="false"
                data-testid=""
                tabindex="0"
              >
                <div
                  class="sc-74661f0c-2 jpIcsi"
                >
                  <span
                    class="sc-74661f0c-3 fsiXOy"
                  >
                    Username
                  </span>
                  <span
                    class="sc-74661f0c-4 erhQzS"
                    data-character-id="0"
                    data-cursor="true"
                  >
                    ​
                  </span>
                </div>
              </div>
            </div>
            <div
              class="sc-74661f0c-0 bDfjcy"
            >
              <div
                class="sc-74661f0c-1 eUeMxO"
                data-cursor-type="phase"
                data-has-errors="false"
                data-testid=""
                tabindex="0"
              >
                <div
                  class="sc-74661f0c-2 jpIcsi"
                >
                  <span
                    class="sc-74661f0c-3 fsiXOy"
                  >
                    Password
                  </span>
                  <span
                    class="sc-74661f0c-4 erhQzS"
                    data-character-id="0"
                    data-cursor="true"
                  >
                    ​
                  </span>
                  <div
                    class="sc-74661f0c-5 gEgYzw"
                    data-show-chars="true"
                  />
                </div>
              </div>
            </div>
            <div
              class="sc-69456e6e-4 fblyeN"
              tabindex="0"
            >
              Login
            </div>
          </div>
          <div
            class="sc-69456e6e-5 jmJcUg"
          >
            {
    "username": "",
    "password": ""
}
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-69456e6e-1 ixuwIj"
    >
      <div
        class="sc-69456e6e-2 ebEoZg"
      >
        <div
          class="sc-69456e6e-3 kPRhRV"
          role="heading"
        >
          Cobalt Input Element
        </div>
        <div
          class="sc-69456e6e-0 iMMezv"
        >
          <div
            class="sc-74661f0c-0 bDfjcy"
          >
            <div
              class="sc-74661f0c-1 eUeMxO sc-69456e6e-6 dwvZJd"
              data-cursor-type="phase"
              data-has-errors="false"
              data-testid=""
              tabindex="0"
            >
              <div
                class="sc-74661f0c-2 jpIcsi"
              >
                <span
                  class="sc-74661f0c-3 fsiXOy"
                >
                  Username
                </span>
                <span
                  class="sc-74661f0c-4 erhQzS"
                  data-character-id="0"
                  data-cursor="true"
                >
                  ​
                </span>
              </div>
            </div>
          </div>
          <div
            class="sc-74661f0c-0 bDfjcy"
          >
            <div
              class="sc-74661f0c-1 eUeMxO"
              data-cursor-type="phase"
              data-has-errors="false"
              data-testid=""
              tabindex="0"
            >
              <div
                class="sc-74661f0c-2 jpIcsi"
              >
                <span
                  class="sc-74661f0c-3 fsiXOy"
                >
                  Password
                </span>
                <span
                  class="sc-74661f0c-4 erhQzS"
                  data-character-id="0"
                  data-cursor="true"
                >
                  ​
                </span>
                <div
                  class="sc-74661f0c-5 gEgYzw"
                  data-show-chars="true"
                />
              </div>
            </div>
          </div>
          <div
            class="sc-69456e6e-4 fblyeN"
            tabindex="0"
          >
            Login
          </div>
        </div>
        <div
          class="sc-69456e6e-5 jmJcUg"
        >
          {
    "username": "",
    "password": ""
}
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
